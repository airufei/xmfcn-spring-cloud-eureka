#不用配置中心的时候可以使用这个文件读取本地配置文件
# ==Tomcat配置==#不用配置中心的时候可以使用这个文件读取本地配置文件
server:
  port: 8093
  max-http-header-size: 50MB
  tomcat:
    max-connections: 20000 # 最大连接数 表示有多少个socket连接到tomcat上 NIO模式下默认是10000
    accept-count: 200 # 允许的最大连接数，即等待队列 应大于等于max-threads 默认值75
    max-threads: 2000     # 最大连接线程数 默认值75
    uri-encoding: UTF-8
    accesslog:
      enabled: true
      directory: /opt/logs/job-admin/
      pattern: '%h %l %u %t "%r" %s %b "%{Referer}i" "%{User-Agent}i" %D'
    max-http-post-size: 50MB

# 本服务需要调用的服务和授权信息-service层
base-service:
  sys-service: sys-service
  kafka-service: kafka-service
  redis-service: redis-service
  elasticsearch-service: elasticsearch-service
  user-service: user-service
  wechat-service: wechat-service
  name: serviceadmin
  password: service987423Ds887

eureka:
  # 链接eureka的用户名密码
  name: xmfadmin
  password: eureka-xmfp23dw
  instance:
    leaseRenewalIntervalInSeconds: 1     # 心跳时间，即服务续约间隔时间（缺省为30s）
    leaseExpirationDurationInSeconds: 2  # 发呆时间，即服务续约到期时间（缺省为90s）
  client:
    serviceUrl:
      defaultZone: http://${eureka.name}:${eureka.password}@localhost:8081/eureka/
    healthcheck:
      enabled: true                           # 开启健康检查（依赖spring-boot-starter-actuator）
    registry-fetch-interval-seconds: 1    # 表示eureka client间隔多久去拉取服务注册信息，默认为30秒
    #Eureka服务注册中心也会尝试把自己当做客户端来注册自己，就会出现下面的错误

spring:
  application:
    name: job-admin
  cloud:
    loadbalancer:
      retry:
        enabled: true
  main:
    allow-bean-definition-overriding: true # 防止'${base-service: sys-service}.FeignClientSpecification', defined in null, could not be registered 多个接口请求服务名称相同
  sleuth:
    sampler:
      probability: 1 #收集日志比例 100%
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  # 数据源
  datasource:
    name: xmfjob
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 测试库
    url: jdbc:mysql://localhost:3306/mfjob?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: Root123
    initialSize: 10 #连接池初始化大小
    minIdle: 5 #连接池最小值
    maxActive: 1000 #连接池最大值
    maxWait: 10000 #连接等待超时的时间
    timeBetweenEvictionRunsMillis: 60000 #间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    poolPreparedStatements: false  #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    validationQuery: select 1 from dual # 验证连接有效与否的SQL，不同的数据配置不同
    testWhileIdle: true #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testOnBorrow: true #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。 这里建议配置为TRUE，防止取到的连接不可用
    testOnReturn: false #归还连接时执行validationQuery检测连接是否有效 建议为false
  freemarker:
    allow-request-override: false
    allow-session-override: false
    cache: true
    check-template-location: true
    content-type: text/html
    enabled: true
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: true
    prefer-file-system-access: true
    suffix: .ftl
    template-loader-path: classpath:/template/
    settings.template_update_delay: 0
    settings.default_encoding: UTF-8
    settings.classic_compatible: true
    order: 1
  messages:
    encoding: utf-8
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  resources:
    static-locations: classpath:/static,classpath:/public,classpath:/resources,classpath:/META-INF/resources

# myBatis配置
mybatis:
  # mybatis主配置文件
  config-location: classpath:mybatis-config.xml
  # mapper.xml文件位置
  mapper-locations: classpath:com/cn/xmf/base/*/*.xml
# LOGGING
logging:
  config: classpath:logback.xml
# timeout config

# 配置ribbon 配置下列值并非ribbon get set 属性，因此鼠标点击无用，但是ribbon会自动加载以下信息
ribbon:
  NFLoadBalancerClassName: com.netflix.loadbalancer.DynamicServerListLoadBalancer  #负载均衡器
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule # 负载策略 ---权重策略---WeightedResponseTimeRule根据响应时间分配一个weight，响应时间越长，weight越小，被选中的可能性越低。
  OkToRetryOnAllOperations: false  # 是否所有操作都进行重试
  retryable: true #是否开启重试功能
  MaxAutoRetries: 0 #同一个Server重试的次数(除去首次)
  MaxAutoRetriesNextServer: 2 #切换相同Server的次数
  MaxHttpConnectionsPerHost: 200 #每个节点Http的最大连接数 默认值50
  MaxConnectionsPerHost: 200 #每个节点的最大连接数 默认值50
  MaxTotalHttpConnections: 2000  #http总连接数 默认值200
  MaxTotalConnections: 2000 # 总连接数 默认值200
  PoolMinThreads: 1 #线程池最小容量 默认值1 值范围1-10
  PoolMaxThreads: 300 #线程池最大容量 默认值 200 值范围200-400
  ConnectTimeout: 2000
  ReadTimeout: 20000 # ribbon 读取返回信息的超时时间，值范围30000-300000
  httpclient:
    enabled: true #okhttp替换httpclient OkHttp 会使用连接池来复用连接以提高效率。OkHttp 提供了对 GZIP 的默认支持来降低传输内容的大小。OkHttp 也提供了对 HTTP 响应的缓存机制，可以避免不必要的网络请求
  okhttp:
    enabled: false #okhttp替换httpclient OkHttp 会使用连接池来复用连接以提高效率。OkHttp 提供了对 GZIP 的默认支持来降低传输内容的大小。OkHttp 也提供了对 HTTP 响应的缓存机制，可以避免不必要的网络请求
  eager-load:
    enabled: true

xmf:
  job:
    login:
      webRoot: http://localhost:8082
    accessToken: 123456
    i18n: